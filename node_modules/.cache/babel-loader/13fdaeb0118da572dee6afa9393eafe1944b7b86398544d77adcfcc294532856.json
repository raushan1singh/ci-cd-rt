{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react\\\\frontend\\\\src\\\\redux\\\\Action.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { add, edt, dlt } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const count = useSelector(state => state.counterq.val);\n  const dispatch = useDispatch();\n  const [data, setdata] = useState({\n    name: ''\n  });\n  const handler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setdata(oldval => {\n      return {\n        ...oldval,\n        [name]: value\n      };\n    });\n  };\n  const submit = () => {\n    if (data.name.trim() !== '') {\n      dispatch(add(data.name));\n      data.name = \"\";\n    } else {\n      alert('Please enter name');\n    }\n  };\n\n  // const edit = (grtid) =>{\n  //   dispatch(edt(grtid));\n  // }\n  const edit = (dispatch, id, currentValue) => {\n    const newValue = prompt('Enter value', currentValue);\n    if (newValue !== null) {\n      dispatch(edt({\n        id,\n        value: newValue\n      }));\n    }\n  };\n  const dt = dtid => {\n    dispatch(dlt(dtid));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: data.name,\n        onChange: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"test_list\",\n        children: count.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [val.value, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"test_btn\",\n              onClick: () => edit(val),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"test_btn\",\n              onClick: () => dt(val.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, val.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"EMTchGCAyBbyPY8x9yYg7HAgsCk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","add","edt","dlt","jsxDEV","_jsxDEV","Counter","_s","count","state","counterq","val","dispatch","data","setdata","name","handler","e","value","target","oldval","submit","trim","alert","edit","id","currentValue","newValue","prompt","dt","dtid","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","index","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/react/frontend/src/redux/Action.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { add, edt, dlt } from './reducer'\r\n\r\nfunction Counter() {\r\n  const count = useSelector(state => state.counterq.val);\r\n  const dispatch = useDispatch();\r\n  const [data, setdata] = useState({\r\n    name: ''\r\n  });\r\n\r\n  const handler = (e) =>{\r\n    const {name, value} = e.target;\r\n    setdata((oldval) =>{\r\n      return{\r\n        ...oldval,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const submit = () =>{\r\n    if(data.name.trim() !== ''){\r\n    dispatch(add(data.name));\r\n    data.name = \"\";\r\n  }else{\r\n    alert('Please enter name');\r\n  }\r\n  }\r\n\r\n  // const edit = (grtid) =>{\r\n  //   dispatch(edt(grtid));\r\n  // }\r\n  const edit = (dispatch, id, currentValue) => {\r\n    const newValue = prompt('Enter value', currentValue);\r\n    if (newValue !== null) {\r\n      dispatch(edt({ id, value: newValue }));\r\n    }\r\n  };\r\n  \r\n\r\n  const dt = (dtid) =>{\r\n    dispatch(dlt(dtid));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type='text' name='name' value={data.name} onChange={handler}/>\r\n        <button onClick={submit}>Add</button>\r\n        <ul className='test_list'>\r\n          {\r\n            count.map((val, index) =>{\r\n              return(\r\n                  <li key={val.id}>\r\n                  {val.value}\r\n                  <span className='test_btn' onClick={() => edit(val)}>Edit</span>\r\n                  <span className='test_btn' onClick={() => dt(val.id)}>Delete</span>\r\n                  </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}