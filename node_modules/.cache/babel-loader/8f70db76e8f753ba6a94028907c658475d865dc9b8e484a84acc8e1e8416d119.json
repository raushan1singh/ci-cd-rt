{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    val: []\n  },\n  reducers: {\n    add: (state, actions) => {\n      state.val.push({\n        id: nanoid(),\n        value: actions.payload\n      });\n    },\n    edt: (state, actions) => {\n      const {\n        id,\n        value\n      } = actions.payload;\n      const ind = state.val.findIndex(d => d.id === id);\n      const pr = prompt('Enter Value', value);\n      state.val[ind].value = pr;\n    },\n    dlt: (state, actions) => {\n      state.val = state.val.filter(v => {\n        return v.id !== actions.payload;\n      });\n    },\n    apiData: (state, actions) => {\n      state.val = actions.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  add,\n  edt,\n  dlt,\n  apiData\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","counterSlice","name","initialState","val","reducers","add","state","actions","push","id","value","payload","edt","ind","findIndex","d","pr","prompt","dlt","filter","v","apiData","reducer"],"sources":["C:/Users/HP/Desktop/react/frontend/src/redux/reducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk  } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    val: []\r\n  },\r\n  reducers: {\r\n    add: (state, actions) => {\r\n      state.val.push({id: nanoid(), value: actions.payload});\r\n    },\r\n    edt: (state, actions) =>{\r\n      const { id, value } = actions.payload;\r\n      const ind = state.val.findIndex((d) => d.id === id);\r\n      const pr = prompt('Enter Value', value);\r\n      state.val[ind].value = pr;\r\n    },\r\n    dlt: (state, actions) =>{\r\n      state.val = state.val.filter((v) =>{\r\n        return v.id !== actions.payload;\r\n      })\r\n    },\r\n    apiData: (state, actions) =>{\r\n      state.val = actions.payload\r\n    }\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { add, edt, dlt, apiData} = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAS,kBAAkB;AACjE,SAASC,MAAM,QAAQ,QAAQ;AAE/B,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,GAAG,EAAE;EACP,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;MACvBD,KAAK,CAACH,GAAG,CAACK,IAAI,CAAC;QAACC,EAAE,EAAEV,MAAM,CAAC,CAAC;QAAEW,KAAK,EAAEH,OAAO,CAACI;MAAO,CAAC,CAAC;IACxD,CAAC;IACDC,GAAG,EAAEA,CAACN,KAAK,EAAEC,OAAO,KAAI;MACtB,MAAM;QAAEE,EAAE;QAAEC;MAAM,CAAC,GAAGH,OAAO,CAACI,OAAO;MACrC,MAAME,GAAG,GAAGP,KAAK,CAACH,GAAG,CAACW,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;MACnD,MAAMO,EAAE,GAAGC,MAAM,CAAC,aAAa,EAAEP,KAAK,CAAC;MACvCJ,KAAK,CAACH,GAAG,CAACU,GAAG,CAAC,CAACH,KAAK,GAAGM,EAAE;IAC3B,CAAC;IACDE,GAAG,EAAEA,CAACZ,KAAK,EAAEC,OAAO,KAAI;MACtBD,KAAK,CAACH,GAAG,GAAGG,KAAK,CAACH,GAAG,CAACgB,MAAM,CAAEC,CAAC,IAAI;QACjC,OAAOA,CAAC,CAACX,EAAE,KAAKF,OAAO,CAACI,OAAO;MACjC,CAAC,CAAC;IACJ,CAAC;IACDU,OAAO,EAAEA,CAACf,KAAK,EAAEC,OAAO,KAAI;MAC1BD,KAAK,CAACH,GAAG,GAAGI,OAAO,CAACI,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEN,GAAG;EAAEO,GAAG;EAAEM,GAAG;EAAEG;AAAO,CAAC,GAAGrB,YAAY,CAACO,OAAO;AAE7D,eAAeP,YAAY,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}