{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport axios from \"axios\";\nexport const fetchApiData = createAsyncThunk('counter/fetchApiData', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    val: [],\n    apiResult: null,\n    status: 'idle',\n    // \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n    error: null\n  },\n  reducers: {\n    add: (state, actions) => {\n      state.val.push({\n        id: nanoid(),\n        value: actions.payload\n      });\n    },\n    edt: (state, actions) => {\n      const {\n        id,\n        value\n      } = actions.payload;\n      const ind = state.val.findIndex(d => d.id === id);\n      const pr = prompt('Enter Value', value);\n      if (pr !== null) state.val[ind].value = pr;\n    },\n    dlt: (state, actions) => {\n      state.val = state.val.filter(v => v.id !== actions.payload);\n    },\n    apiData: (state, actions) => {\n      state.apiResult = actions.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.apiResult = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  add,\n  edt,\n  dlt,\n  apiData\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","axios","fetchApiData","id","rejectWithValue","response","get","data","error","counterSlice","name","initialState","val","apiResult","status","reducers","add","state","actions","push","value","payload","edt","ind","findIndex","d","pr","prompt","dlt","filter","v","apiData","extraReducers","builder","addCase","pending","fulfilled","action","rejected","reducer"],"sources":["C:/Users/HP/Desktop/react/frontend/src/redux/reducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk  } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport axios from \"axios\";\r\n\r\nexport const fetchApiData = createAsyncThunk(\r\n  'counter/fetchApiData',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    val: [],\r\n    apiResult: null,\r\n    status: 'idle', // \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n    error: null\r\n  },\r\n  reducers: {\r\n    add: (state, actions) => {\r\n      state.val.push({ id: nanoid(), value: actions.payload });\r\n    },\r\n    edt: (state, actions) => {\r\n      const { id, value } = actions.payload;\r\n      const ind = state.val.findIndex((d) => d.id === id);\r\n      const pr = prompt('Enter Value', value);\r\n      if (pr !== null) state.val[ind].value = pr;\r\n    },\r\n    dlt: (state, actions) => {\r\n      state.val = state.val.filter((v) => v.id !== actions.payload);\r\n    },\r\n    apiData: (state, actions) => {\r\n      state.apiResult = actions.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchApiData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchApiData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.apiResult = action.payload;\r\n      })\r\n      .addCase(fetchApiData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { add, edt, dlt, apiData } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}