{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={value:0};export const counterSlice=createSlice({name:'counter',initialState,reducers:{/*increment: (state) => {\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },*/}});// Action creators are generated for each case reducer function\nexport const{increment,decrement,incrementByAmount}=counterSlice.actions;export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","decrement","incrementByAmount","actions","reducer"],"sources":["C:/Users/HP/Desktop/react/frontend/src/crud/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: 0,\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    /*increment: (state) => {\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },*/\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,CACT,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGH,WAAW,CAAC,CACtCI,IAAI,CAAE,SAAS,CACfH,YAAY,CACZI,QAAQ,CAAE,CACR;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QARI,CAUJ,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEC,SAAS,CAAEC,SAAS,CAAEC,iBAAkB,CAAC,CAAGL,YAAY,CAACM,OAAO,CAE/E,cAAe,CAAAN,YAAY,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}