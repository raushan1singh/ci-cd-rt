{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react\\\\frontend\\\\src\\\\ReduxEtracker\\\\TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment } from './Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const count = useSelector(state => state.counter.value);\n  const dispatch = useDispatch();\n  const [inval, upinval] = useState();\n  const handler = () => {};\n  const submit = e => {\n    e.preventDefault();\n    alert('qqqqqqq');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textbox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          method: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"allfm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"form-control\",\n                placeholder: \"Enter name\",\n                name: \"name\",\n                onChange: handler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-primary\",\n              onClick: submit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskManager\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doing\",\n          children: \"Doing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TaskManager, \"e0WDKP0v+SCPgMsAHxsegBRHkvQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","decrement","increment","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskManager","_s","count","state","counter","value","dispatch","inval","upinval","handler","submit","e","preventDefault","alert","children","className","action","method","type","class","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/react/frontend/src/ReduxEtracker/TaskManager.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { decrement, increment } from './Reducer'\r\n\r\nconst TaskManager = () => {\r\n  const count = useSelector((state) => state.counter.value)\r\n  const dispatch = useDispatch();\r\n\r\n  const [inval, upinval] = useState();\r\n\r\n  const handler = () =>{\r\n\r\n  }\r\n\r\n  const submit = (e) =>{\r\n    e.preventDefault();\r\n    alert('qqqqqqq');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <button\r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          Increment\r\n        </button>\r\n        <span>{count}</span>\r\n        <button\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          Decrement\r\n        </button>\r\n      </div> */}\r\n\r\n      <div className='main'>\r\n        <div className='textbox'>\r\n        <form action=\"\" method='post'>\r\n            <div className='allfm'>\r\n                <div className=\"mb-3 mt-3\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter name\" name=\"name\" onChange={handler} />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>Submit</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n        <div className='taskManager'>\r\n            <div className='todo'>\r\n                To Do\r\n            </div>\r\n\r\n            <div className='doing'>\r\n                Doing\r\n            </div>\r\n\r\n            <div className='done'>\r\n                Done\r\n            </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskManager;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}