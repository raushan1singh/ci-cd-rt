{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react\\\\frontend\\\\src\\\\ReduxEtracker\\\\TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addList } from './Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const list = useSelector(state => state.counter.value);\n  const dispatch = useDispatch();\n  const [inval, upinval] = useState({\n    id: Date.now(),\n    name: '',\n    status: 'todo' // Track task status (todo, doing, done)\n  });\n  const [draggedItem, setDraggedItem] = useState(null);\n  const handler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    upinval(v => ({\n      ...v,\n      [name]: value\n    }));\n  };\n  const submit = e => {\n    e.preventDefault();\n    dispatch(addList({\n      name: inval.name,\n      id: inval.id,\n      status: inval.status\n    }));\n    upinval({\n      id: Date.now(),\n      name: '',\n      status: 'todo'\n    });\n  };\n  const onDragStart = (e, item) => {\n    setDraggedItem(item);\n  };\n  const onDrop = (e, status) => {\n    e.preventDefault();\n    const updatedList = list.map(item => {\n      if (item.id === draggedItem.id) {\n        return {\n          ...item,\n          status\n        };\n      }\n      return item;\n    });\n    dispatch(addList(updatedList)); // Assuming addList replaces the state\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textbox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          method: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"allfm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Enter name\",\n                value: inval.name,\n                name: \"name\",\n                onChange: handler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: submit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskManager\",\n        children: ['todo', 'doing', 'done'].map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: status,\n          onDrop: e => onDrop(e, status),\n          onDragOver: allowDrop,\n          style: {\n            border: '1px solid #000',\n            minHeight: '100px',\n            margin: '10px',\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: status.charAt(0).toUpperCase() + status.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: list.filter(item => item.status === status).map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              draggable: true,\n              onDragStart: e => onDragStart(e, v),\n              children: [i + 1, \". \", v.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash-alt\",\n                onClick: () => dlt(v.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this)]\n            }, v.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, status, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TaskManager, \"83zZFbg/RP8MZoVuY+TapYoEal8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","addList","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskManager","_s","list","state","counter","value","dispatch","inval","upinval","id","Date","now","name","status","draggedItem","setDraggedItem","handler","e","target","v","submit","preventDefault","onDragStart","item","onDrop","updatedList","map","allowDrop","children","className","action","method","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragOver","style","border","minHeight","margin","padding","charAt","toUpperCase","slice","filter","i","draggable","dlt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/react/frontend/src/ReduxEtracker/TaskManager.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addList } from './Reducer';\r\n\r\nconst TaskManager = () => {\r\n  const list = useSelector((state) => state.counter.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const [inval, upinval] = useState({\r\n    id: Date.now(),\r\n    name: '',\r\n    status: 'todo'  // Track task status (todo, doing, done)\r\n  });\r\n\r\n  const [draggedItem, setDraggedItem] = useState(null);\r\n\r\n  const handler = (e) => {\r\n    const { name, value } = e.target;\r\n    upinval((v) => ({\r\n      ...v,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addList({ name: inval.name, id: inval.id, status: inval.status }));\r\n    upinval({ id: Date.now(), name: '', status: 'todo' });\r\n  };\r\n\r\n  const onDragStart = (e, item) => {\r\n    setDraggedItem(item);\r\n  };\r\n\r\n  const onDrop = (e, status) => {\r\n    e.preventDefault();\r\n    const updatedList = list.map((item) => {\r\n      if (item.id === draggedItem.id) {\r\n        return { ...item, status };\r\n      }\r\n      return item;\r\n    });\r\n    dispatch(addList(updatedList)); // Assuming addList replaces the state\r\n  };\r\n\r\n  const allowDrop = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='main'>\r\n        <div className='textbox'>\r\n          <form action=\"\" method='post'>\r\n            <div className='allfm'>\r\n              <div className=\"mb-3 mt-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter name\"\r\n                  value={inval.name}\r\n                  name=\"name\"\r\n                  onChange={handler}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className='taskManager'>\r\n          {['todo', 'doing', 'done'].map((status) => (\r\n            <div\r\n              key={status}\r\n              className={status}\r\n              onDrop={(e) => onDrop(e, status)}\r\n              onDragOver={allowDrop}\r\n              style={{\r\n                border: '1px solid #000',\r\n                minHeight: '100px',\r\n                margin: '10px',\r\n                padding: '10px'\r\n              }}\r\n            >\r\n              <h5>{status.charAt(0).toUpperCase() + status.slice(1)}</h5>\r\n              <ol>\r\n                {list\r\n                  .filter((item) => item.status === status)\r\n                  .map((v, i) => (\r\n                    <li\r\n                      key={v.id}\r\n                      draggable\r\n                      onDragStart={(e) => onDragStart(e, v)}\r\n                    >\r\n                      {i + 1}. {v.name}\r\n                      <i className='fas fa-trash-alt' onClick={() => dlt(v.id)}></i>\r\n                    </li>\r\n                  ))}\r\n              </ol>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}