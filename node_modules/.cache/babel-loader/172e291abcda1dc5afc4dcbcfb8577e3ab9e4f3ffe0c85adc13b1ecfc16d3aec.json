{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react\\\\test\\\\src\\\\redux\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { list } from './counterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n  const [val, setval] = useState({\n    name: ''\n  });\n  const count = useSelector(state => state.counter.val);\n  const dispatch = useDispatch();\n  const handler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setval(oldval => {\n      return {\n        ...oldval,\n        [name]: value\n      };\n    });\n  };\n  const btn = () => {\n    dispatch(list(val.name));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn,\n      children: \"btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Counter, \"AH5LPwYON4mL1vxi38hlDd/F6z8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","list","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","val","setval","name","count","state","counter","dispatch","handler","e","value","target","oldval","btn","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/react/test/src/redux/Counter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {list} from './counterSlice'\r\n\r\nexport function Counter() {\r\n  const [val, setval] = useState({\r\n    name: ''\r\n  });\r\n  const count = useSelector((state) => state.counter.val)\r\n  const dispatch = useDispatch();\r\n\r\n  const handler = (e) =>{\r\n    const {name, value} = e.target;\r\n    setval((oldval) =>{\r\n      return{\r\n        ...oldval,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const btn = () =>{\r\n    dispatch(list(val.name));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <input type='text' name='name' onChange={handler}/>\r\n    <button onClick={btn}>btn</button>\r\n    <div>{count}</div>\r\n    </>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,IAAI,QAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC;IAC7BY,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,KAAK,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACL,GAAG,CAAC;EACvD,MAAMM,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,OAAO,GAAIC,CAAC,IAAI;IACpB,MAAM;MAACN,IAAI;MAAEO;IAAK,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC9BT,MAAM,CAAEU,MAAM,IAAI;MAChB,OAAM;QACJ,GAAGA,MAAM;QACT,CAACT,IAAI,GAAGO;MACV,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,GAAG,GAAGA,CAAA,KAAK;IACfN,QAAQ,CAACb,IAAI,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,MAAM;MAACa,QAAQ,EAAER;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnDxB,OAAA;MAAQyB,OAAO,EAAER,GAAI;MAAAC,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClCxB,OAAA;MAAAkB,QAAA,EAAMV;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAChB,CAAC;AAEP;AAACpB,EAAA,CA5BeD,OAAO;EAAA,QAIPP,WAAW,EACRC,WAAW;AAAA;AAAA6B,EAAA,GALdvB,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}