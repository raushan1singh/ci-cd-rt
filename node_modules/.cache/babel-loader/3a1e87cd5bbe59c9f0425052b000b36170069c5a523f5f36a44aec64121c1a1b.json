{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport axios from \"axios\";\nexport const fetchApiData = createAsyncThunk('counter/fetchApiData', async id => {\n  const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    val: [],\n    apiData: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    add: (state, action) => {\n      state.val.push({\n        id: nanoid(),\n        value: action.payload\n      });\n    },\n    edt: (state, action) => {\n      const {\n        id,\n        value\n      } = action.payload;\n      const ind = state.val.findIndex(d => d.id === id);\n      const pr = prompt('Enter Value', value);\n      if (pr !== null) {\n        state.val[ind].value = pr;\n      }\n    },\n    dlt: (state, action) => {\n      state.val = state.val.filter(v => v.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.apiData = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  add,\n  edt,\n  dlt\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","axios","fetchApiData","id","response","get","data","counterSlice","name","initialState","val","apiData","status","error","reducers","add","state","action","push","value","payload","edt","ind","findIndex","d","pr","prompt","dlt","filter","v","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/HP/Desktop/react/frontend/src/redux/reducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport axios from \"axios\";\r\n\r\nexport const fetchApiData = createAsyncThunk(\r\n  'counter/fetchApiData',\r\n  async (id) => {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    val: [],\r\n    apiData: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.val.push({ id: nanoid(), value: action.payload });\r\n    },\r\n    edt: (state, action) => {\r\n      const { id, value } = action.payload;\r\n      const ind = state.val.findIndex((d) => d.id === id);\r\n      const pr = prompt('Enter Value', value);\r\n      if (pr !== null) {\r\n        state.val[ind].value = pr;\r\n      }\r\n    },\r\n    dlt: (state, action) => {\r\n      state.val = state.val.filter((v) => v.id !== action.payload);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchApiData.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchApiData.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.apiData = action.payload;\r\n      })\r\n      .addCase(fetchApiData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { add, edt, dlt } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAC1C,sBAAsB,EACtB,MAAOI,EAAE,IAAK;EACZ,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,8CAA6CF,EAAG,EAAC,CAAC;EACpF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;EACtCU,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtBD,KAAK,CAACN,GAAG,CAACQ,IAAI,CAAC;QAAEf,EAAE,EAAEH,MAAM,CAAC,CAAC;QAAEmB,KAAK,EAAEF,MAAM,CAACG;MAAQ,CAAC,CAAC;IACzD,CAAC;IACDC,GAAG,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtB,MAAM;QAAEd,EAAE;QAAEgB;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;MACpC,MAAME,GAAG,GAAGN,KAAK,CAACN,GAAG,CAACa,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,KAAKA,EAAE,CAAC;MACnD,MAAMsB,EAAE,GAAGC,MAAM,CAAC,aAAa,EAAEP,KAAK,CAAC;MACvC,IAAIM,EAAE,KAAK,IAAI,EAAE;QACfT,KAAK,CAACN,GAAG,CAACY,GAAG,CAAC,CAACH,KAAK,GAAGM,EAAE;MAC3B;IACF,CAAC;IACDE,GAAG,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACtBD,KAAK,CAACN,GAAG,GAAGM,KAAK,CAACN,GAAG,CAACkB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC1B,EAAE,KAAKc,MAAM,CAACG,OAAO,CAAC;IAC9D;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC9B,YAAY,CAAC+B,OAAO,EAAGjB,KAAK,IAAK;MACxCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDoB,OAAO,CAAC9B,YAAY,CAACgC,SAAS,EAAE,CAAClB,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACG,OAAO;IAChC,CAAC,CAAC,CACDY,OAAO,CAAC9B,YAAY,CAACiC,QAAQ,EAAE,CAACnB,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACJ,KAAK,CAACuB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAErB,GAAG;EAAEM,GAAG;EAAEM;AAAI,CAAC,GAAGpB,YAAY,CAAC8B,OAAO;AAErD,eAAe9B,YAAY,CAAC+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}